import { TryCpApiResponse, _TryCpResponseWrapper } from "./types.js";
/**
 * Deserialize the binary response from TryCP
 *
 * @param response - The response to deserialize.
 * @returns The deserialized response.
 *
 * @internal
 */
export declare const deserializeTryCpResponse: (response: Uint8Array) => _TryCpResponseWrapper;
/**
 * Deserialize a binary signal from TryCP
 *
 * @param signal - The signal to deserialize.
 * @returns The deserialized signal.
 */
export declare const deserializeTryCpSignal: <T>(signal: Uint8Array) => {
    cell_id: import("@holochain/client").CellId;
    payload: T;
    zome_name: string;
};
/**
 * Deserialize the binary response from the Admin or App API
 *
 * @param response - The response to deserialize.
 * @returns The deserialized response.
 *
 * @internal
 */
export declare const deserializeApiResponse: (response: Uint8Array) => TryCpApiResponse;
/**
 * Deserialize the App API response's payload
 *
 * @param payload - The payload to deserialize.
 * @typeParam P - The type of the response's payload.
 * @returns The deserialized payload.
 *
 * @internal
 */
export declare const deserializeZomeResponsePayload: <T>(payload: Uint8Array) => T;
