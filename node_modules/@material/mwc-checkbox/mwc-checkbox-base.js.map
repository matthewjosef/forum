{"version":3,"file":"mwc-checkbox-base.js","sourceRoot":"","sources":["mwc-checkbox-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport '@material/mwc-ripple/mwc-ripple.js';\n\nimport {ariaProperty} from '@material/mwc-base/aria-property.js';\nimport {FormElement} from '@material/mwc-base/form-element.js';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple.js';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers.js';\nimport {html, PropertyValues, TemplateResult} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\n/** @soyCompatible */\nexport class CheckboxBase extends FormElement {\n  @query('.mdc-checkbox') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  @property({type: Boolean, reflect: true}) checked = false;\n\n  @property({type: Boolean}) indeterminate = false;\n\n  @property({type: Boolean, reflect: true}) override disabled = false;\n\n  @property({type: String, reflect: true}) name = '';\n\n  @property({type: String}) value = 'on';\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-label'})\n  override ariaLabel!: string;\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-labelledby'})\n  ariaLabelledBy!: string;\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-describedby'})\n  ariaDescribedBy!: string;\n\n  /**\n   * Touch target extends beyond visual boundary of a component by default.\n   * Set to `true` to remove touch target added to the component.\n   * @see https://material.io/design/usability/accessibility.html\n   */\n  @property({type: Boolean}) reducedTouchTarget = false;\n\n  @state() protected animationClass = '';\n\n  @state() protected shouldRenderRipple = false;\n\n  @state() protected focused = false;\n\n  @queryAsync('mwc-ripple') override ripple!: Promise<Ripple|null>;\n\n  // MDC Foundation is unused\n  protected mdcFoundationClass = undefined;\n\n  protected mdcFoundation = undefined;\n\n  protected createAdapter() {\n    return {};\n  }\n\n  protected override update(changedProperties: PropertyValues) {\n    const oldIndeterminate = changedProperties.get('indeterminate');\n    const oldChecked = changedProperties.get('checked');\n    const oldDisabled = changedProperties.get('disabled');\n    if (oldIndeterminate !== undefined || oldChecked !== undefined ||\n        oldDisabled !== undefined) {\n      const oldState = this.calculateAnimationStateName(\n          !!oldChecked, !!oldIndeterminate, !!oldDisabled);\n      const newState = this.calculateAnimationStateName(\n          this.checked, this.indeterminate, this.disabled);\n      this.animationClass = `${oldState}-${newState}`;\n    }\n    super.update(changedProperties);\n  }\n\n  protected calculateAnimationStateName(\n      checked: boolean, indeterminate: boolean, disabled: boolean): string {\n    if (disabled) {\n      return 'disabled';\n    } else if (indeterminate) {\n      return 'indeterminate';\n    } else if (checked) {\n      return 'checked';\n    } else {\n      return 'unchecked';\n    }\n  }\n\n  protected rippleElement: Ripple|null = null;\n\n  protected rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    this.ripple.then((v) => this.rippleElement = v);\n    return this.ripple;\n  });\n\n  // TODO(dfreedm): Make this use selected as a param after Polymer/internal#739\n  /** @soyTemplate */\n  protected renderRipple(): TemplateResult|string {\n    return this.shouldRenderRipple ? this.renderRippleTemplate() : '';\n  }\n\n  /** @soyTemplate */\n  protected renderRippleTemplate(): TemplateResult {\n    return html`<mwc-ripple\n        .disabled=\"${this.disabled}\"\n        unbounded></mwc-ripple>`;\n  }\n\n  /**\n   * @soyTemplate\n   * @soyAttributes checkboxAttributes: input\n   * @soyClasses checkboxClasses: .mdc-checkbox\n   */\n  protected override render(): TemplateResult {\n    const selected = this.indeterminate || this.checked;\n    /* eslint-disable eqeqeq */\n    // tslint:disable:triple-equals\n    /** @classMap */\n    const classes = {\n      'mdc-checkbox--disabled': this.disabled,\n      'mdc-checkbox--selected': selected,\n      'mdc-checkbox--touch': !this.reducedTouchTarget,\n      'mdc-ripple-upgraded--background-focused': this.focused,\n      // transition animiation classes\n      'mdc-checkbox--anim-checked-indeterminate':\n          this.animationClass == 'checked-indeterminate',\n      'mdc-checkbox--anim-checked-unchecked':\n          this.animationClass == 'checked-unchecked',\n      'mdc-checkbox--anim-indeterminate-checked':\n          this.animationClass == 'indeterminate-checked',\n      'mdc-checkbox--anim-indeterminate-unchecked':\n          this.animationClass == 'indeterminate-unchecked',\n      'mdc-checkbox--anim-unchecked-checked':\n          this.animationClass == 'unchecked-checked',\n      'mdc-checkbox--anim-unchecked-indeterminate':\n          this.animationClass == 'unchecked-indeterminate',\n    };\n    // tslint:enable:triple-equals\n    /* eslint-enable eqeqeq */\n    const ariaChecked = this.indeterminate ? 'mixed' : undefined;\n    return html`\n      <div class=\"mdc-checkbox mdc-checkbox--upgraded ${classMap(classes)}\">\n        <input type=\"checkbox\"\n              class=\"mdc-checkbox__native-control\"\n              name=\"${ifDefined(this.name)}\"\n              aria-checked=\"${ifDefined(ariaChecked)}\"\n              aria-label=\"${ifDefined(this.ariaLabel)}\"\n              aria-labelledby=\"${ifDefined(this.ariaLabelledBy)}\"\n              aria-describedby=\"${ifDefined(this.ariaDescribedBy)}\"\n              data-indeterminate=\"${this.indeterminate ? 'true' : 'false'}\"\n              ?disabled=\"${this.disabled}\"\n              .indeterminate=\"${this.indeterminate}\"\n              .checked=\"${this.checked}\"\n              .value=\"${this.value}\"\n              @change=\"${this.handleChange}\"\n              @focus=\"${this.handleFocus}\"\n              @blur=\"${this.handleBlur}\"\n              @mousedown=\"${this.handleRippleMouseDown}\"\n              @mouseenter=\"${this.handleRippleMouseEnter}\"\n              @mouseleave=\"${this.handleRippleMouseLeave}\"\n              @touchstart=\"${this.handleRippleTouchStart}\"\n              @touchend=\"${this.handleRippleDeactivate}\"\n              @touchcancel=\"${this.handleRippleDeactivate}\">\n        <div class=\"mdc-checkbox__background\"\n          @animationend=\"${this.resetAnimationClass}\">\n          <svg class=\"mdc-checkbox__checkmark\"\n              viewBox=\"0 0 24 24\">\n            <path class=\"mdc-checkbox__checkmark-path\"\n                  fill=\"none\"\n                  d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n          </svg>\n          <div class=\"mdc-checkbox__mixedmark\"></div>\n        </div>\n        ${this.renderRipple()}\n      </div>`;\n  }\n\n  protected setFormData(formData: FormData) {\n    if (this.name && this.checked) {\n      formData.append(this.name, this.value);\n    }\n  }\n\n  protected handleFocus() {\n    this.focused = true;\n    this.handleRippleFocus();\n  }\n\n  protected handleBlur() {\n    this.focused = false;\n    this.handleRippleBlur();\n  }\n\n  protected handleRippleMouseDown(event: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleTouchStart(event: Event) {\n    this.rippleHandlers.startPress(event);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n\n  protected handleChange() {\n    this.checked = this.formElement.checked;\n    this.indeterminate = this.formElement.indeterminate;\n  }\n\n  protected resetAnimationClass() {\n    this.animationClass = '';\n  }\n\n  get isRippleActive() {\n    return this.rippleElement?.isActive || false;\n  }\n}\n"]}