{"version":3,"file":"mwc-line-ripple-directive.js","sourceRoot":"","sources":["mwc-line-ripple-directive.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAMH,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,EAAgB,SAAS,EAAE,SAAS,EAAiC,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAM9G,MAAM,aAAa,GAAG,CAAC,WAAwB,EAAwB,EAAE;IACvE,OAAO;QACL,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;QAC7D,WAAW,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACnE,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;QAClE,QAAQ,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,EAAE,CAC9B,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC;QACtD,oBAAoB,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;YACzC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC;QACD,sBAAsB,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;YAC3C,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,OAAO,mBAAoB,SAAQ,SAAS;IAIhD,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAJV,iBAAY,GAAuB,IAAI,CAAC;QACtC,eAAU,GAAiC,IAAI,CAAC;QAKxD,QAAQ,QAAQ,CAAC,IAAI,EAAE;YACrB,KAAK,QAAQ,CAAC,SAAS,CAAC;YACxB,KAAK,QAAQ,CAAC,QAAQ;gBACpB,OAAO;YACT;gBACE,MAAM,IAAI,KAAK,CACX,uDAAuD,CAAC,CAAC;SAChE;IACH,CAAC;IAED;;;OAGG;IACM,MAAM,CAAC,IAAmB,EAAE,OAAkC;QACrE,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;aAC3B;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAqB,CAAC;YAC/C,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC7C,MAAM,OAAO,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,uBAAuB,CAAC,OAAO,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACxB;QACD,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,SAAS,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {MDCLineRippleAdapter} from '@material/line-ripple/adapter.js';\nimport {MDCLineRippleFoundation} from '@material/line-ripple/foundation.js';\nimport {AttributePart, directive, Directive, DirectiveParameters, PartInfo, PartType} from 'lit/directive.js';\n\nexport interface LineRipple extends HTMLElement {\n  lineRippleFoundation: MDCLineRippleFoundation;\n}\n\nconst createAdapter = (lineElement: HTMLElement): MDCLineRippleAdapter => {\n  return {\n    addClass: (className) => lineElement.classList.add(className),\n    removeClass: (className) => lineElement.classList.remove(className),\n    hasClass: (className) => lineElement.classList.contains(className),\n    setStyle: (propertyName, value) =>\n        lineElement.style.setProperty(propertyName, value),\n    registerEventHandler: (evtType, handler) => {\n      lineElement.addEventListener(evtType, handler);\n    },\n    deregisterEventHandler: (evtType, handler) => {\n      lineElement.removeEventListener(evtType, handler);\n    },\n  };\n};\n\nexport class LineRippleDirective extends Directive {\n  private previousPart: AttributePart|null = null;\n  protected foundation: MDCLineRippleFoundation|null = null;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n\n    switch (partInfo.type) {\n      case PartType.ATTRIBUTE:\n      case PartType.PROPERTY:\n        return;\n      default:\n        throw new Error(\n            'LineRipple only support attribute and property parts.');\n    }\n  }\n\n  /**\n   * There is no PropertyPart in Lit 2 so far. For more info see:\n   * https://github.com/lit/lit/issues/1863\n   */\n  override update(part: AttributePart, _params: DirectiveParameters<this>) {\n    if (this.previousPart !== part) {\n      if (this.foundation) {\n        this.foundation.destroy();\n      }\n      this.previousPart = part;\n      const lineElement = part.element as LineRipple;\n      lineElement.classList.add('mdc-line-ripple');\n      const adapter = createAdapter(lineElement);\n      this.foundation = new MDCLineRippleFoundation(adapter);\n      this.foundation.init();\n    }\n    return this.render();\n  }\n\n  render(): MDCLineRippleFoundation|null {\n    return this.foundation;\n  }\n}\n\nexport const lineRipple = directive(LineRippleDirective);\n"]}