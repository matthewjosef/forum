{"version":3,"file":"mwc-radio-list-item-base.js","sourceRoot":"","sources":["mwc-radio-list-item-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport '@material/mwc-radio/mwc-radio.js';\n\nimport {Radio} from '@material/mwc-radio/mwc-radio.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {GraphicType, ListItemBase} from './mwc-list-item-base.js';\n\nexport class RadioListItemBase extends ListItemBase {\n  @query('slot') protected override slotElement!: HTMLSlotElement|null;\n  @query('mwc-radio') protected radioElement!: Radio;\n\n  @property({type: Boolean}) left = false;\n  @property({type: String, reflect: true})\n  override graphic: GraphicType = 'control';\n\n  protected _changeFromClick = false;\n\n  override render() {\n    const radioClasses = {\n      'mdc-deprecated-list-item__graphic': this.left,\n      'mdc-deprecated-list-item__meta': !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic = this.graphic && this.graphic !== 'control' && !this.left ?\n        this.renderGraphic() :\n        html``;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : html``;\n    const ripple = this.renderRipple();\n\n    return html`\n      ${ripple}\n      ${graphic}\n      ${this.left ? '' : text}\n      <mwc-radio\n          global\n          class=${classMap(radioClasses)}\n          tabindex=${this.tabindex}\n          name=${ifDefined(this.group === null ? undefined : this.group)}\n          .checked=${this.selected}\n          ?disabled=${this.disabled}\n          @checked=${this.onChange}>\n      </mwc-radio>\n      ${this.left ? text : ''}\n      ${meta}`;\n  }\n\n  protected override onClick() {\n    this._changeFromClick = true;\n    super.onClick();\n  }\n\n  protected async onChange(evt: Event) {\n    const checkbox = evt.target as Radio;\n    const changeFromProp = this.selected === checkbox.checked;\n\n    if (!changeFromProp) {\n      this._skipPropRequest = true;\n      this.selected = checkbox.checked;\n      await this.updateComplete;\n      this._skipPropRequest = false;\n\n      if (!this._changeFromClick) {\n        this.fireRequestSelected(this.selected, 'interaction');\n      }\n    }\n\n    this._changeFromClick = false;\n  }\n}\n"]}