{"version":3,"file":"mwc-notched-outline-base.js","sourceRoot":"","sources":["mwc-notched-outline-base.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,4CAA4C;AAC5C,mDAAmD;AAEnD,OAAO,EAAC,WAAW,EAAC,MAAM,oCAAoC,CAAC;AAE/D,OAAO,EAAC,2BAA2B,EAAC,MAAM,yCAAyC,CAAC;AACpF,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AAErD,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IAAnD;;QAIqB,uBAAkB,GAAG,2BAA2B,CAAC;QAE1C,UAAK,GAAG,CAAC,CAAC;QAEM,SAAI,GAAG,KAAK,CAAC;QAE7C,aAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;IA2CjC,CAAC;IAvCW,aAAa;QACrB,OAAO;YACL,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;YAC9D,WAAW,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;YACpE,qBAAqB,EAAE,CAAC,KAAK,EAAE,EAAE,CAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,KAAK,IAAI,CAAC;YAC9D,wBAAwB,EAAE,GAAG,EAAE,CAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC;SACpD,CAAC;IACJ,CAAC;IAES,WAAW,CAAC,UAAmB,EAAE,KAAc;QACvD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,OAAO;SACR;QAED,IAAI,UAAU,IAAI,KAAK,KAAK,SAAS,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACjC;IACH,CAAC;IAEQ,MAAM;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAExC,MAAM,OAAO,GAAG,QAAQ,CAAC;YACvB,8BAA8B,EAAE,IAAI,CAAC,IAAI;SAC1C,CAAC,CAAC;QAEH,OAAO,IAAI,CAAA;yCAC0B,OAAO;;;;;;cAMlC,CAAC;IACb,CAAC;CACF;AApDgC;IAA9B,KAAK,CAAC,sBAAsB,CAAC;mDAAiC;AAKrC;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDAAW;AAEM;IAAzC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;gDAAc;AAIjB;IAArC,KAAK,CAAC,6BAA6B,CAAC;wDAAyC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {MDCNotchedOutlineAdapter} from '@material/notched-outline/adapter.js';\nimport {MDCNotchedOutlineFoundation} from '@material/notched-outline/foundation.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport class NotchedOutlineBase extends BaseElement {\n  @query('.mdc-notched-outline') protected mdcRoot!: HTMLElement;\n  protected mdcFoundation!: MDCNotchedOutlineFoundation;\n\n  protected readonly mdcFoundationClass = MDCNotchedOutlineFoundation;\n\n  @property({type: Number}) width = 0;\n\n  @property({type: Boolean, reflect: true}) open = false;\n\n  protected lastOpen = this.open;\n\n  @query('.mdc-notched-outline__notch') protected notchElement!: HTMLDivElement;\n\n  protected createAdapter(): MDCNotchedOutlineAdapter {\n    return {\n      addClass: (className) => this.mdcRoot.classList.add(className),\n      removeClass: (className) => this.mdcRoot.classList.remove(className),\n      setNotchWidthProperty: (width) =>\n          this.notchElement.style.setProperty('width', `${width}px`),\n      removeNotchWidthProperty: () =>\n          this.notchElement.style.removeProperty('width'),\n    };\n  }\n\n  protected openOrClose(shouldOpen: boolean, width?: number) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    if (shouldOpen && width !== undefined) {\n      this.mdcFoundation.notch(width);\n    } else {\n      this.mdcFoundation.closeNotch();\n    }\n  }\n\n  override render() {\n    this.openOrClose(this.open, this.width);\n\n    const classes = classMap({\n      'mdc-notched-outline--notched': this.open,\n    });\n\n    return html`\n      <span class=\"mdc-notched-outline ${classes}\">\n        <span class=\"mdc-notched-outline__leading\"></span>\n        <span class=\"mdc-notched-outline__notch\">\n          <slot></slot>\n        </span>\n        <span class=\"mdc-notched-outline__trailing\"></span>\n      </span>`;\n  }\n}\n"]}