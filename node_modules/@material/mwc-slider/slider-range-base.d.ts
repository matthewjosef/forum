/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import '@material/mwc-ripple/mwc-ripple.js';
import { Ripple } from '@material/mwc-ripple/mwc-ripple.js';
import { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';
import { MDCSliderAdapter } from '@material/slider/adapter.js';
import { PropertyValues, TemplateResult } from 'lit';
import { SliderBase } from './slider-base.js';
export { Thumb } from '@material/slider/types.js';
export declare class SliderRangeBase extends SliderBase {
    protected startInput: HTMLInputElement;
    protected startThumb: HTMLElement;
    protected startThumbKnob: HTMLElement;
    protected startValueIndicatorContainer: HTMLElement;
    protected startRipple: Promise<Ripple | null>;
    valueStart: number;
    protected startThumbWithIndicator: boolean;
    protected startThumbTop: boolean;
    protected shouldRenderStartRipple: boolean;
    protected startThumbTransformStyle: string;
    protected startThumbTransitionStyle: string;
    protected startThumbCssProperties: {
        [key: string]: string;
    };
    protected startRippleHandlers: RippleHandlers;
    update(changed: PropertyValues): void;
    protected renderRootEl(content: TemplateResult): TemplateResult<1>;
    protected renderStartInput(): TemplateResult<1>;
    protected renderEndInput(): TemplateResult<1>;
    protected renderTrack(): TemplateResult<1>;
    protected renderStartThumb(): TemplateResult<1>;
    protected createAdapter(): MDCSliderAdapter;
    protected onStartChange(e: Event): void;
    protected onStartFocus(): void;
    protected onStartBlur(): void;
    protected onStartMouseenter(): void;
    protected onStartMouseleave(): void;
    protected setFormData(formData: FormData): void;
}
